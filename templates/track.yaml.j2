name: {{ data.name }}
description: "CHANGE_ME The hackiest hackers hacking hackily ever after"
# Set to true when the theme designer has fully integrated the track with the scenario, which implies he wrote the discourse posts.
integrated_with_scenario: false

contacts:
  # Who created the challenges. Use either handles or real names.
  dev:
    - CHANGE_ME
    - CHANGE_ME2
  # Who did/does quality assurance on the challenge
  qa:
    - CHANGE_ME
    - CHANGE_ME2
  # Who can offer support regarding the challenge during the CTF.
  support:
    - CHANGE_ME
    - CHANGE_ME2

flags:
    # The flag string
  - flag: FLAG-CHANGE_ME
    # How many points for the flag
    value: 5
    # INTERNAL description of the flag.
    description: Free flag in source of index.php CHANGE_ME
    # The text the participants see AFTER they submit the flag.
    return_string: '[{{ data.name }}] 1/1 Good job! Track completed. CHANGE_ME'
    tags:
      # Name of the discourse trigger for this flag. If a discourse post in the posts/ directory has this trigger, it will be posted when this flag is submitted.
      # This value can also be used to reference flags in Ansible playbooks. See the "Load Flags" task in deploy.yaml.
      discourse: {{ data.name | replace("-","_") }}_flag_1

{% if data.template == "files-only" %}
services: []
{% else %}
services:
  # List of network services running for the track.
  - name: HTTP
    # The IPv6 address was randomly generated from the MAC Address (hwaddr) and the subnets defined in main.tf.
    # If you need other machines, you can choose another MAC Address and get the IPv6 from the MAC AND the IPv6 subnet ({{ data.ipv6_subnet }}) at https://eui64-calc.princelle.org/
    address: '{{ data.full_ipv6_address }}'
    # On what port does the service listens to
    port: {% if data.template == "python-service" %}5000{% else %}80{% endif %}
    # For automated checks during the CTF. This alerts us if something is wrong with the service.
    check: http
    # During development, this service will be accessible from http://localhost:800. This allows to access the services outside the host (for example from the Windows Host if using WSL or from your host machine if using GitHub Codespaces).
    # This is not required, but provides a very helpful shortcut when using Codespaces or WSL.
    dev_port_mapping: 800
{% endif %}