- name: "Install Python, PIP and VirtualEnvironment on each host"
  hosts: "*"
  vars_files:
    - ../track.yaml
  tasks:
    - name: "Load flags"
      loop: "{{ flags }}"
      vars:
        key: "{{ (item.tags).discourse }}"
        value: "{{ item.flag }}"
      ansible.builtin.set_fact:
        track_flags: "{{ track_flags | default({}) | combine({key: value}) }}"

    - name: Initial System Upgrade
      ansible.builtin.apt:
        update_cache: true
        install_recommends: false
        upgrade: full

    - name: Install Python3 and dependencies
      ansible.builtin.apt:
        name:
          - python3
          - python3-pip
          - virtualenv
        state: present

    - name: Create service user
      ansible.builtin.user:
        name: service
        shell: /bin/sh
        state: present

    - name: Copy the application
      ansible.builtin.template:
        src: "challenge/{{ item.src }}"
        dest: /home/service/
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
      loop:
        - src: app.py
          owner: root
          group: root
          mode: '0644'
        - src: flag-1.txt
          owner: service
          group: service
          mode: '0600'

    - name: Python PIP install virtual environment
      ansible.builtin.pip:
        chdir: /home/service/
        virtualenv: /home/service/
        state: present
        name:
          - flask

    - name: Create flag file
      ansible.builtin.copy:
        dest: /home/service/flag-rce.txt
        owner: service
        group: service
        mode: '0644'
        content: "{{ track_flags.mock_track_python_service_flag_2 }} (2/2)\n"

    - name: Create systemctl service
      ansible.builtin.copy:
        dest: /etc/systemd/system/my_track.service
        owner: root
        group: root
        mode: '0644'
        content: |
          [Unit]
          Description=My track systemd service
          After=network.target

          [Service]
          Type=simple
          User=service
          Group=service
          WorkingDirectory=/home/service
          ExecStart=/home/service/bin/flask run --port 5000 -h ::
          Restart=on-failure
          RestartSec=3s

          [Install]
          WantedBy=default.target

    - name: Start my_track service
      ansible.builtin.service:
        name: my_track.service
        state: restarted
        enabled: true
        daemon_reload: true
