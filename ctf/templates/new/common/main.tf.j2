# AUTOGENERATED - No need to change this section #
resource "incus_project" "this" {
  remote = var.incus_remote

  name        = local.track.name
  description = "Project for the ${local.track.name} track"

  config = {
    "features.images"       = "false"
    "user.contacts.dev"     = join(", ", local.track.contacts.dev)
    "user.contacts.qa"      = length(local.track.contacts.qa) > 0 ? join(", ", local.track.contacts.qa) : null
    "user.contacts.support" = length(local.track.contacts.support) > 0 ? join(", ", local.track.contacts.support) : null
  }
}

# AUTOGENERATED - No need to change this section #
resource "incus_network" "this" {
  remote  = var.incus_remote
  project = incus_project.this.name

  name        = substr(local.track.name, 0, 15)
  description = "Network for challenges in the ${local.track.name} track"

  config = {
    "ipv4.address" = var.deploy == "production" ? "none" : null
    "ipv6.address" = "{{ data.ipv6_subnet }}::1/64"
    "ipv6.nat"     = var.deploy == "production" ? "false" : "true"
  }
}

# Some settings can be changed here #
resource "incus_profile" "this" {
  remote  = var.incus_remote
  project = incus_project.this.name

  name        = "containers"
  description = "Default profile for containers in the ${local.track.name} track"

  config = {
    # These limits should only be adjusted if you NEED more resources.
    "limits.cpu"              = "2"
    "limits.memory"           = "256MiB"
    "limits.processes"        = "2000"
    "environment.http_proxy"  = var.deploy == "production" ? "http://proxy.ctf-int.internal.nsec.io:3128" : null
    "environment.https_proxy" = var.deploy == "production" ? "http://proxy.ctf-int.internal.nsec.io:3128" : null
  }


  device {
    name = "root"
    type = "disk"

    properties = {
      "pool" = "default"
      "path" = "/"
      # This limit should only be adjusted if you NEED more resources.
      "size" = "1GiB"
    }
  }
}


# !!!! Modify this section as needed to match what you need. !!!! #
locals {
  instances = {
    # `{{ data.name }}` can be changed to something more relevant
    {{ data.name }} = {
      "description" : "CHANGE_MEMain apache + PHP website",
      # This second half of a MAC address was automatically generated. The first half is just below
      "hwaddr" : "{{ data.hardware_address }}",
      # This is the subdomain value for this machine. Do NOT include .ctf, it will be automatically added.
      # For example, if the value of the record is a.b.c, a DNS record will be created for a.b.c.ctf
      "record" : "{{ data.name }}",
      # This second half of the IPv6 is derived from the hwaddr.
      "ipv6" : "{{ data.ipv6 }}"
    }
    # You can add more machines here.
  }
}

# AUTOGENERATED - No need to change this section #
resource "incus_instance" "this" {
  remote  = var.incus_remote
  project = incus_project.this.name

  for_each = local.instances

  name = each.key

  image    = "images:ubuntu/24.04"
  profiles = ["default", incus_profile.this.name]

  device {
    name = "eth0"
    type = "nic"

    properties = {
      "network" = incus_network.this.name
      "name"    = "eth0"
      "hwaddr"  = "${each.value["hwaddr"]}"
    }
  }

  lifecycle {
    ignore_changes = [running]
  }
}

# AUTOGENERATED - No need to change this section #
resource "incus_instance" "build_container" {
  count = var.build_container ? 1 : 0

  remote  = var.incus_remote
  project = incus_project.this.name

  name = "build_container"

  image    = "images:ubuntu/24.04"
  profiles = ["default"]

  config = {
    "environment.http_proxy"  = var.deploy == "production" ? "http://proxy.ctf-int.internal.nsec.io:3128" : null
    "environment.https_proxy" = var.deploy == "production" ? "http://proxy.ctf-int.internal.nsec.io:3128" : null
  }

  device {
    name = "eth0"
    type = "nic"

    properties = {
      "network" = incus_network.this.name
      "name"    = "eth0"
    }
  }

  lifecycle {
    ignore_changes = [running]
  }
}

# AUTOGENERATED - No need to change this section #
resource "incus_network_zone_record" "this" {
  remote = var.incus_remote

  # This resource is generated for each instances (the `locals` section of this file)
  for_each = local.instances

  zone = "ctf"

  name        = each.value["record"]
  description = each.value["description"]

  entry {
    type = "AAAA"
    ttl  = 3600
    # The last 2 bytes of the first half of this IP ({{ data.iov6_subnet }}) have been generated randomly to prevent collisions with other track networks.
    value = "{{ data.ipv6_subnet }}:${each.value["ipv6"]}"
  }
}


# If you need to manually add DNS records, here is an example.
#resource "incus_network_zone_record" "sub" {
#  remote = var.incus_remote
#
#  zone = "ctf"
#
#  name        = "sub.chal5.hackademy"
#  description = local.instances["challenge5"]["description"]
#
#  entry {
#    type  = "AAAA"
#    ttl   = 3600
#    value = "{{ data.ipv6_subnet }}:${local.instances["challenge5"]["ipv6"]}"
#  }
#}
